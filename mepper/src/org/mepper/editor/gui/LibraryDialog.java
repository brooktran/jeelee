/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LibraryDialog.java
 *
 * Created on 2011-4-24, 18:00:03
 */

package org.mepper.editor.gui;

import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;

import org.mepper.gui.ResourcesTreeCellRenderer;
import org.mepper.resources.AbstractResourcesManager;
import org.mepper.resources.DefaultResource;
import org.mepper.resources.DefaultResourcesManager;
import org.mepper.resources.LibraryResource;
import org.mepper.resources.ProjectManager;
import org.mepper.resources.ResourceManager;
import org.mepper.resources.ResourceMessager;
import org.mepper.resources.StorableResource;
import org.mepper.utils.MepperConstant;
import org.zhiwu.app.AppDialog;
import org.zhiwu.app.AppManager;
import org.zhiwu.app.Application;
import org.zhiwu.utils.AppResources;

/**
 *
 * @author root
 */
public class LibraryDialog extends AppDialog {
	private final ResourceManager manager;
	private final ProjectManager project; 
        private final AppResources r= AppManager.getResources();
    public LibraryDialog(ProjectManager project,Application app) {
    	super(app);
    	this.project = project;
    	manager=DefaultResourcesManager.getInstance();
        initComponents();
        setTitle(r.getString("import","library"));
        managerTree.addTreeSelectionListener(new TreeSelectionListener() {
			@Override
			public void valueChanged(TreeSelectionEvent e) {
				StorableResource r= (StorableResource) managerTree.getSelectionPath().getLastPathComponent();
				messager.setText(ResourceMessager.getMessage(r));
			}
		});
    }
    
    private StorableResource getRoot(){
    	return AbstractResourcesManager.create(manager.getRoot()); 
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        managerTree = new javax.swing.JTree();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        messager = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        managerTree.setBorder(javax.swing.BorderFactory.createTitledBorder(r.getString("library")));
        managerTree.setModel(new DefaultTreeModel(getRoot()));
        managerTree.setCellRenderer(new ResourcesTreeCellRenderer());
        managerTree.setEditable(true);
        managerTree.setRootVisible(false);
        managerTree.setShowsRootHandles(true);
        jScrollPane1.setViewportView(managerTree);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jButton1.setText(r.getString("confirm"));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, java.awt.BorderLayout.EAST);
        jPanel1.add(messager, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    	TreePath[] paths=managerTree.getSelectionPaths();
    	if(paths != null){
        	addLibrary(paths);
    	}
    	fireOptionSelected(COMFIRM_OPTION);
    }//GEN-LAST:event_jButton1ActionPerformed

	private void addLibrary(TreePath[] paths) {
		StorableResource r=project.getCurrentProject().getChildByID(MepperConstant.LIBRARY_SET_ID);
		for(TreePath p:paths){
    		if(p.getPathCount()<2){
    			continue;
    		}
    		StorableResource lib = (StorableResource) p.getLastPathComponent();
    		r.addChild(addLibrary(r,lib));
    	}
		project.setCurrentNode(r);
	}

	private StorableResource addLibrary(StorableResource parent, StorableResource child) {
		StorableResource newChild = child.isLibrary()?new LibraryResource():new DefaultResource();
		newChild.setSource(child.getSource());
		for (int i = 0, j = child.getChildCount(); i < j; i++) {
			newChild.addChild(addLibrary(newChild, child.getChild(i)));
		}
		return newChild;
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree managerTree;
    private javax.swing.JLabel messager;
    // End of variables declaration//GEN-END:variables

}
