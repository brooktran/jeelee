/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TileCreationToolOption.java
 *
 * Created on 2011-4-12, 1:36:30
 */

package org.mepper.tool;

import java.awt.Dimension;
import java.awt.Point;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JToolBar;

import org.mepper.editor.Editor;
import org.mepper.editor.map.Map;
import org.mepper.editor.map.MapFactory;
import org.mepper.editor.tile.Tile;
import org.mepper.editor.tile.TileFactory;
import org.zhiwu.app.AppManager;
import org.zhiwu.utils.AppResources;

/**
 *
 * @author root
 */
public class TileCreationToolOption extends JToolBar {
	private Tile tile;
	private final Editor editor;
	private volatile static TileCreationToolOption instance;
        private final AppResources r=AppManager.getResources();
	
   
	/** Creates new form BeanForm */
    private TileCreationToolOption(final Editor editor) {
        initComponents();
        this.editor = editor;
        
        
        final Tile t = TileFactory.getDefaultTileDefinition();
        
        jTextField1.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		jTextField1.setText(t.getStartingPoint().x+","+
        				t.getStartingPoint().y);
        	}
        });
        
        jTextField2.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		jTextField2.setText(
        				t.getOccupie().width+","+
        				t.getOccupie().height);
        	}
        });
        
        jTextField3.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		jTextField3.setText(
        				t.getTileWidth()+","+
        				t.getTileHeight());
        	}
        });

        jComboBox1.addItemListener(new ItemListener() {

            @Override
            public void itemStateChanged(ItemEvent e) {
            	updateMapFromComboBox();
            }
        });
    }
    
    private void updateMapFromComboBox(){
    	Map oldVal = editor.getActivateView().getMap();
    	Map newVal =MapFactory.getMap(jComboBox1.getSelectedItem().toString());
    	MapFactory.copy(oldVal,newVal);
    	editor.getActivateView().setMap(newVal);
    }
    
    public static TileCreationToolOption getInstance (Editor editor){
    	if(instance == null){
			synchronized (TileCreationToolOption.class) {
				if (instance == null) {
					instance = new TileCreationToolOption(editor);
				}
			}
    	}
    	return instance;
    }
    
    
	public void setTile(Tile tile) {
		this.tile= tile;
		
		Point p=tile.getStartingPoint();
		jTextField1.setText(p.x+","+p.y);
		
		Dimension d= tile.getOccupie();
		jTextField2.setText(d.width+","+d.height );
		
		Map map=editor.getActivateView().getMap();
		jTextField3.setText(map.getTileWidth()+","+ map.getTileHeight());
//		BufferedImage image=tile.getImage();
//		jTextField3.setText(image.getWidth()+","+image.getHeight());
	}
	

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jComboBox1 = new javax.swing.JComboBox();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jButton1 = new javax.swing.JButton();
        messager = new javax.swing.JLabel();

        jLabel1.setText(r.getString("startingPoint")+":");
        add(jLabel1);

        jTextField1.setText("0,0");
        jTextField1.setMaximumSize(new java.awt.Dimension(67, 21));
        add(jTextField1);
        add(jSeparator1);

        jLabel2.setText(r.getString("occupie")+":");
        add(jLabel2);

        jTextField2.setMaximumSize(new java.awt.Dimension(67, 21));
        add(jTextField2);
        add(jSeparator2);

        jLabel3.setText(r.getString("tile.size")+":");
        add(jLabel3);

        jTextField3.setMaximumSize(new java.awt.Dimension(67, 21));
        add(jTextField3);

        jSeparator3.setMinimumSize(new java.awt.Dimension(10, 0));
        add(jSeparator3);

        jComboBox1.setModel(new DefaultComboBoxModel( MapFactory.getSupportedTypes()));
        jComboBox1.setMaximumSize(new java.awt.Dimension(87, 32767));
        add(jComboBox1);
        add(jSeparator4);

        jButton1.setText("确定");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);

        messager.setForeground(new java.awt.Color(255, 0, 0));
        add(messager);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		try {
			if(tile == null){
				return;
			}
			Point point = getPoint(jTextField1.getText().trim());
			tile.setStartingPoint(point);

			point = getPoint(jTextField2.getText().trim());
			Dimension d = new Dimension();
			d.width = point.x;
			d.height = point.y;
			tile.setOccupie(d);
			
			point = getPoint(jTextField3.getText().trim());
			tile.setTileWidth(point.x);
			tile.setTileHeight(point.y);
//			tile.setTileStep(point.x, point.y);
			
			updateMapFromComboBox();
    		Map map=editor.getActivateView().getMap();
    		map.setTileStep(point.x, point.y);
//			editor.getActivateView().getComponent().repaint();
			messager.setText("");
		} catch (Exception e) {
			messager.setText("错误数据格式");
			e.printStackTrace();
		}
    	
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel messager;
    // End of variables declaration//GEN-END:variables

    
    private Point getPoint(String text) {
    	int p=text.indexOf(",");
    	int x= Integer.parseInt(text.substring(0, p));
    	int y= Integer.parseInt(text.substring(p+1));
		return new Point(x,y);
	}
}
