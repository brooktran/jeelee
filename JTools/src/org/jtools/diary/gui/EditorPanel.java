/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditorPanel.java
 *
 * Created on 2011-6-20, 13:14:42
 */

package org.jtools.diary.gui;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Rectangle;

import javax.swing.Scrollable;
import javax.swing.UIManager;
import javax.swing.text.JTextComponent;

/**
 *
 * @author root
 */
public class EditorPanel extends javax.swing.JPanel implements Scrollable{
	private JTextComponent editor;
	private boolean isLineWrap;
	
    public EditorPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

	@Override
	public Dimension getPreferredScrollableViewportSize() {
		return editor.getPreferredScrollableViewportSize();
	}

	@Override
	public int getScrollableUnitIncrement(Rectangle visibleRect,
			int orientation, int direction) {
		return editor.getScrollableUnitIncrement(visibleRect, orientation, direction);
	}

	@Override
	public int getScrollableBlockIncrement(Rectangle visibleRect,
			int orientation, int direction) {
		return editor.getScrollableBlockIncrement(visibleRect, orientation,
				direction);
	}

	@Override
	public boolean getScrollableTracksViewportWidth() {
		return isLineWrap;
	}

	@Override
	public boolean getScrollableTracksViewportHeight() {
		return editor.getScrollableTracksViewportHeight();
	}

	public void setEditor(JTextComponent editor) {
		this.editor=editor;
		removeAll();
		setLayout(new BorderLayout());
		add(editor);
		setBackground(UIManager.getColor("TextField.background"));
		setOpaque(true);
	}

	public JTextComponent getEditor() {
		return editor;
	}

	public void setLineWrap(boolean isLineWrap) {
		this.isLineWrap = isLineWrap;
		editor.revalidate();
		editor.repaint();
	}

	public boolean isLineWrap() {
		return isLineWrap;
	}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
