/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DailyConfigItem.java
 * Created on 2010-12-8, 23:34:53
 */

package org.daily;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;

import org.zhiwu.app.AppMnanger;
import org.zhiwu.app.config.AbstractConfigHandle;
import org.zhiwu.app.config.AbstractConfigItem;
import org.zhiwu.app.config.ConfigHandle;
import org.zhiwu.app.config.PreferenceManager;
import org.zhiwu.utils.AppResources;
import org.zhiwu.utils.FileUtils;

/**
 *
 * @author root
 */
public class DailyConfigItem extends AbstractConfigItem {
	private static final long serialVersionUID = -1037893201911672836L;
	private final AppResources r;
	
	private final ConfigHandle lineWrapHandle = new AbstractConfigHandle("daily.line.wrap") {//$NON-NLS-1$
		@Override
		public void handle() {
			Boolean isLineWrap=Boolean.parseBoolean(jCheckBox1.isSelected()+"");
//			setNewValue(isLineWrap);
			putPreference("line.wrap",isLineWrap);//$NON-NLS-1$
		}
	}; 
	
	private final ConfigHandle backupHandle = new AbstractConfigHandle("daily.backup") {//$NON-NLS-1$
		@Override
		public void handle() {
			Boolean backup=Boolean.parseBoolean(jCheckBox2.isSelected()+"");
//			setNewValue(backup);
			putPreference("backup",backup);//$NON-NLS-1$
		}
	};
	
	private final ConfigHandle pathHandle =new AbstractConfigHandle("daily.path") {//$NON-NLS-1$
		@Override
		public void handle() {
			String backup= jTextField1.getText();
//			setNewValue(backup);
			putPreference("backup.path", backup);//$NON-NLS-1$
		}
	};
	
	/** Creates new form DailyConfigItem */
    public DailyConfigItem() {
    	super("daily",PreferenceManager.getInstance().getPreference(DailyView.class.getName()));//$NON-NLS-1$
    	r=AppMnanger.getResources();
    }
  
	/* (non-Javadoc)
	 * @see org.zhiwu.app.config.ConfigItem#init()
	 */
	@Override
	public void init() {
		 initComponents();
		 
		 jCheckBox1.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				hasUnsaveChanged=true;
				addHandle(lineWrapHandle);
			}
		});
		 
		 jCheckBox2.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				boolean backup=jCheckBox2.isSelected();
				jButton1.setEnabled(backup);
				hasUnsaveChanged=true;
				addHandle(backupHandle);
			}
		});
		 
	}
	
	private boolean isLineWrap(){
		return getBooleanPreference("line.wrap");//$NON-NLS-1$
	}
	
	private boolean isBackup(){
		return getBooleanPreference("backup");//$NON-NLS-1$
	}
	
	private String backupPath(){
		return getPreference("backup.path");//$NON-NLS-1$
	}
	
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();

        jCheckBox1.setSelected(isLineWrap());
        jCheckBox1.setText(r.getString("daily.config.wrap"));
        jCheckBox1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(r.getString("daily.config.backup")));

        jCheckBox2.setSelected(isBackup());
        jCheckBox2.setText(r.getString("daily.config.backup.text.file"));
        jCheckBox2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel1.setText(r.getString("daily.config.backup.path"));

        jTextField1.setText(backupPath());
        jTextField1.setEnabled(false);

        jButton1.setText(r.getString("daily.config.backup.browse"));
        jButton1.setEnabled(jCheckBox2.isSelected());
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText(r.getString("daily.config.backup.file.type"));

        jComboBox1.setModel(getFileType());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox2)
                .addGap(397, 397, 397))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    	jTextField1.setText(FileUtils.openDirectorie(this).getAbsolutePath());
    	hasUnsaveChanged = true;
    	addHandle(pathHandle);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
	
    /**
	 * @return
	 */
	private ComboBoxModel getFileType() {
		String[] types=getPreference("backup.types").split(",");
		return new DefaultComboBoxModel(types);
	}
	

}

